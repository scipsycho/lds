#!/Users/dharmeshsingh/.virtualenvs/py3/bin/python

import argparse
import os
parser = argparse.ArgumentParser(description = "A utitlity app for creating files for programming languages")

parser.add_argument('-f','--file',action="store", dest="file_name",help="name of the file to be created")

parser.add_argument('-v','--with-vector',action='store_true', help = "include vector header", dest='include_vector',default=False)

parser.add_argument('-s','--with-string',action='store_true', dest='include_string', help="include string header", default=False)

parser.add_argument('-d','--without-defines',action='store_false', help="do not include the default defines",dest='include_defines',default=True)

parser.add_argument('-n','--no-run',action='store_true',dest='show_only',help = "output the contents of the file to STDOUT instead of creating the file",default=False)

parser.add_argument('-k','--not-kickstart',action='store_false', help = "do not include special things made just for kickstart",dest='kickstart',default=True)
args = parser.parse_args()
INCLUDES=[]
DEFINES=[]



#Default values for defines
DEFINES.append("ll long long int")
DEFINES.append("ull unsigned long long int") 
DEFINES.append("MIN(x,y) ((x<y)?x:y)")
DEFINES.append("MAX(x,y) ((x>y)?x:y)")
DEFINES.append("FOR(a,b) for(int i=a; i<b; i++)")
DEFINES.append("FOR(a) for(int i=0; i<b; i++)")

#Default BODY
BODY = "\tint t,T;\n\tstd::cin>>T;\n\n\n\tfor(t=1; t<=T; t++)\n\t{\n\n\t\tstd::cout<<\"Case #\"<<t<<\": \"<<;\n\t}\n"

if "cpp" in args.file_name:
	INCLUDES.append("<iostream>")

	if args.include_vector:
		INCLUDES.append("<vector>")
	if args.include_string:
		INCLUDES.append("<string>")

	
FILE = open(args.file_name,"w+")	

for i in INCLUDES:
	FILE.write("#include " + i + "\n")

FILE.write("\n\n\n\n")
if args.include_defines:
	for i in DEFINES:
		FILE.write("#define " + i + "\n")

FILE.write("\n\nint main()\n{");
FILE.write(BODY + "\n")
FILE.write("}\n")
if args.show_only:
	print("A file named \'"+args.file_name+" will be created with following data: ")
	line = FILE.readline()
	while line:
		print(line)
		line = FILE.readline()
	os.remove(args.file_name)
		


