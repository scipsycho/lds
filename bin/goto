#!/bin/bash


if [[ -f "$LDS_GOTO_FILE" ]]
then 
  source "$LDS_GOTO_FILE" 
else
  touch "$LDS_GOTO_FILE"
  echo "#!/bin/bash"  > "$LDS_GOTO_FILE" 
  echo "" >> "$LDS_GOTO_FILE"
  chmod a+x "$LDS_GOTO_FILE"
fi 

function printHash {
  for i in `seq $1` 
  do
    echo -n "$2"
  done
  echo ""
}

function showHelpMenu {
  printHash 10 #
  echo "Usage: goto [OPTIONS] [DIR] ALIAS"
  echo "Options:"
  echo "-r, --register DIR ALIAS: create an alias ALIAS for the directory DIR"
  echo "-d  --deregister ALIAS: removes the ALIAS"
  echo "-l, --list, list: shows the list of registered ALIAS"
}
if [[ $# -gt 3 ]] 
    then
        showHelpMenu
        return
    fi


LDS_isRegister=n
LDS_isDeregister=n
LDS_REGISTER_DIR=""
LDS_TEMP_VAR_ALIAS=""
while [[ $# -gt 0 ]]
do 
  case $1 in 
    -r|--register)
      LDS_REGISTER_DIR="$2"
      LDS_isRegister="y"
      if ! [[ -d "$LDS_REGISTER_DIR" ]]
      then 
          echo "No such directory! See --help for more details."
        return
      fi 
      LDS_REGISTER_DIR=`cd $REGISTER_DIR; pwd`
      shift
      shift
      ;;
    -d|--deregister)
      LDS_TEMP_VAR_ALIAS=$1
      if [[ "${!LDS_TEMP_VAR_ALIAS}" == "" ]]
      then 
        showHelpMenu 
      fi 
      shift 
      ;;
    clean)
      mv "$LDS_GOTO_FILE" "${LDS_GOTO_FILE}_backup"
      rm "$LDS_GOTO_FILE" > /dev/null 2>&1
      echo "Cleaned all aliases.."
      return
    ;;
  --help|-h|help)
      showHelpMenu 
      return 
    ;; 
  list|--list|-l)
    for i in `( set -o posix ; set ) | grep "^LDS_ALIAS_"`
    do
      lds_alias_temp=`echo $i | awk -F "=" '{ print $1 }'`
      lds_alias_dir_temp=`echo $i | awk -F "=" '{ print $2 }'`
      lds_alias_temp=`printf "%-20s" "$lds_alias_temp"`
      lds_alias_dir_temp=`printf "%-20s" "$lds_alias_dir_temp"` 
      echo "$lds_alias_temp$(tput setaf 2)=======>$(tput sgr0)   $lds_alias_dir_temp$(tput sgr0)"
    done
    return
    ;;
    *)
      LDS_TEMP_VAR_ALIAS=$1
      if [[ "${!LDS_TEMP_VAR_ALIAS}" == "" ]]
      then 
        showHelpMenu 
        return
      fi 
      shift
      ;;
  esac
done

if [[ "$LDS_isRegister" == "n" ]]
then
  LDS_TEMP_VAR_ALIAS="LDS_ALIAS_$ALIAS"
  cd "${!LDS_TEMP_VAR_ALIAS}"
elif [[ -d "$LDS_REGISTER_DIR" ]]
then 
  echo "LDS_LDS_TEMP_VAR_ALIAS_$ALIAS=$LDS_REGISTER_DIR" >> "$LDS_GOTO_FILE"
  echo "Alias $LDS_TEMP_VAR_ALIAS has been created for $LDS_REGISTER_DIR" 
fi



