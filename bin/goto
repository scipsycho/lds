#!/bin/bash

LDS_isExit="false"

function printHash {
  for i in `seq $1` 
  do
    echo -n "$2"
  done
  echo ""
}

function showHelpMenu {
  printHash 10 #
  echo "Usage: goto [OPTIONS] [DIR] [commands|ALIAS]"
  echo 
  echo "Commands:"
  echo "list: lists all aliases currently registered"
  echo "clean: cleans all aliases"
  echo "restore: undo the previous opreatino. (Remember restore itself cannot be undone)"
  echo "help: shows this help menu"
  echo "version: show version of the program"
  echo
  echo "Options:"
  echo "-r, --register DIR ALIAS: create an alias ALIAS for the directory DIR"
  echo "-d  --deregister ALIAS: removes the ALIAS"
  echo "-l, --list, list: shows the list of registered ALIAS"
  echo "--rd: register a default alias (will move to this directory when no alias is provided)"
  echo "-h, --help, help: shows this help menu"
  echo "-v, --version: show version of the program"

  echo ""
  echo "Note: if you use \"default\" alias, you can simply use \"goto\" to move to that directory"
  
  LDS_isExit="true"
}

LDS_isRegister=n
LDS_isDeregister=n
LDS_REGISTER_DIR=""
LDS_TEMP_VAR_ALIAS=""

function _ {
  if [[ $# -gt 3 ]] 
  then
    showHelpMenu
    return
  elif [[ "$#" == "0" ]]
  then
    source $LDS_BIN_DIR/goto default
    LDS_isExit="true"
    return
  fi 

  if [[ -f "$LDS_GOTO_FILE" ]]
  then 
    source "$LDS_GOTO_FILE" 
  else
    touch "$LDS_GOTO_FILE"
    echo "#!/bin/bash"  > "$LDS_GOTO_FILE" 
    echo "" >> "$LDS_GOTO_FILE"
    chmod a+x "$LDS_GOTO_FILE"
  fi 

  while [[ $# -gt 0 ]]
  do 
    case $1 in 
      --rd)
        LDS_REGISTER_DIR="$2"
        LDS_TEMP_VAR_ALIAS="default"
        LDS_isRegister="y"
        if ! [[ -d "$LDS_REGISTER_DIR" ]]
        then 
          echo "No such directory! see --help for more details."
          LDS_isExit="true"
          return 
        fi 
        LDS_REGISTER_DIR=`cd $LDS_REGISTER_DIR && pwd`
        break 
        ;;
      -r|--register)
        LDS_REGISTER_DIR="$2"
        LDS_TEMP_VAR_ALIAS=`echo "$3" | sed 's/[^a-zA-Z0-9_]//g'` 
        if [[ "$LDS_TEMP_VAR_ALIAS" == "" ]]
        then 
          echo "Please use alpha numeric characters only!"
          LDS_isExit="true"
          return 
        fi 
        LDS_isRegister="y"
        if ! [[ -d "$LDS_REGISTER_DIR" ]]
        then 
            echo "No such directory! See --help for more details."
            LDS_isExit="true"
            return
        fi 
        LDS_REGISTER_DIR=`cd $LDS_REGISTER_DIR && pwd`
        break 
        ;;
      -d|--deregister)
        LDS_TEMP_VAR_ALIAS="LDS_ALIAS_$2"
        if [[ "${!LDS_TEMP_VAR_ALIAS}" == "" ]]
        then 
          showHelpMenu 
          return
        fi 
        LDS_isDeregister="y"
        break 
        ;;
      clean)
        mv "$LDS_GOTO_FILE" "${LDS_GOTO_FILE}_backup"
        echo "" > "$LDS_GOTO_FILE"
        echo "Cleaned all aliases.."
        LDS_isExit="true"
        return
        ;;
      restore)
        echo "This is a irreverisble operation!"
        echo "Do you still wish to continue (y/n): "
        read choice 
        if [[ "$choice" == "y" ]]
        then 
          cat "${LDS_GOTO_FILE}_backup" > "$LDS_GOTO_FILE"
        fi 
        LDS_isExit="true"
        return 
        ;;
    --help|-h|help)
      showHelpMenu 
      return 
      ;; 
    list|--list|-l)
      for i in `( cat "$LDS_GOTO_FILE" | cut -d " " -f 2 )`
      do
        lds_alias_temp=`echo $i | cut -d '=' -f 1`
        lds_alias_temp=${lds_alias_temp#LDS_ALIAS_}
        lds_alias_dir_temp=`echo $i | cut -d '=' -f 2`
        echo "$(tput setaf 2)$lds_alias_temp$(tput sgr0) ================> $lds_alias_dir_temp$(tput sgr0)" | awk '{ printf "%-20s%-18s%-20s", $1, $2, $3}'
        echo ""
      done
      LDS_isExit="true"
      return
      ;;
    -v|--version|version)
      echo "1.0.0.1v"
      LDS_isExit="true"
      return
      ;;
      *)
    LDS_TEMP_VAR_ALIAS="LDS_ALIAS_$1"
    if [[ "${!LDS_TEMP_VAR_ALIAS}" == "" ]]
    then 
      showHelpMenu 
      return
    fi 
    LDS_TEMP_VAR_ALIAS="${!LDS_TEMP_VAR_ALIAS}"
    break
    esac
  done
}

_ $@  

if [[ "$LDS_isExit" == "true" ]]
then 
  return 
fi 

if [[ "$LDS_isRegister" == "y" ]]
then 
  echo "local LDS_ALIAS_$LDS_TEMP_VAR_ALIAS=$LDS_REGISTER_DIR" >> "$LDS_GOTO_FILE"
  echo "Alias $LDS_TEMP_VAR_ALIAS has been created for $LDS_REGISTER_DIR" 
elif [[ "$LDS_isDeregister" == "y" ]]
then
  cat "$LDS_GOTO_FILE" > "${LDS_GOTO_FILE}_backup"
  cat "${LDS_GOTO_FILE}_backup" | grep -v "${LDS_TEMP_VAR_ALIAS}=" > "$LDS_GOTO_FILE"
else 
  cd "${LDS_TEMP_VAR_ALIAS}"
fi



